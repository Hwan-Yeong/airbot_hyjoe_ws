@startuml

state WAITING_TO_START as "**WAITING_TO_START**\n---\ncmd = True\nrun = False\nerror = False" #LightBlue
state RUNNING as "**RUNNING**\n---\ncmd = True\nrun = True\nerror = False" #LightBlue
state WAITING_TO_STOP as "**WAITING_TO_STOP**\n---\ncmd = False\nrun = True\nerror = False" #LightBlue
state IDLE as "**IDLE**\n---\ncmd = False\nrun = False\nerror = False" #LightBlue

state ERROR_WHILE_RUNNING as "**ERROR_WHILE_RUNNING**\n---\ncmd = True\nrun = False\nerror = True" #Salmon
state ERROR_WHILE_STOPPING as "**ERROR_WHILE_STOPPING**\n---\ncmd = False\nrun = False\nerror = True" #Salmon

state Retry1 as "**Retry**"
state Retry2 as "**Retry**"


[*] --> WAITING_TO_START

WAITING_TO_START --> RUNNING : **Start: Success**
WAITING_TO_START -up-> ERROR_WHILE_RUNNING : **Start: Fail**
WAITING_TO_START -[#blue,dashed]-> IDLE : **ðŸš¨ lidar_cmd: false**

RUNNING --> RUNNING : **data_handling**\n**publishing /scan**
RUNNING -[#red]-> ERROR_WHILE_RUNNING : **Error Occured**
RUNNING -[#blue,dashed]-> WAITING_TO_STOP : **ðŸš¨ lidar_cmd: false**

ERROR_WHILE_RUNNING --> Retry1
ERROR_WHILE_RUNNING -[#blue,dashed]-> ERROR_WHILE_STOPPING : **ðŸš¨ lidar_cmd: false**
ERROR_WHILE_STOPPING --> Retry2
ERROR_WHILE_STOPPING -[#green,dashed]-> ERROR_WHILE_RUNNING : **ðŸš¨ lidar_cmd: true**

Retry1 --> Retry1 : **ReStart: Fail**
Retry1 --> RUNNING : **ReStart: Success**

Retry2 --> Retry2 : **ReStart: Fail**
Retry2 --> WAITING_TO_STOP : **ReStart: Success**

WAITING_TO_STOP --> IDLE : **Stop: Success**
WAITING_TO_STOP --> WAITING_TO_STOP : **Stop: Fail**
WAITING_TO_STOP -[#green,dashed]-> RUNNING : **ðŸš¨ lidar_cmd: true**

IDLE -[#green,dashed]-> WAITING_TO_START : **ðŸš¨ lidar_cmd: true**
' IDLE -[#red]-> ERROR_WHILE_STOPPING: **Error Occured**

@enduml